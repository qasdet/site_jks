import sqlite3
import os
from datetime import datetime

def update_database():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –¥–æ–±–∞–≤–ª—è—è –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è"""
    db_path = 'instance/app.db'
    
    if not os.path.exists(db_path):
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö {db_path} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return False
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        print("üîÑ –ù–∞—á–∏–Ω–∞—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        
        # 1. –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ image_url –≤ forum_topic
        cursor.execute("PRAGMA table_info(forum_topic)")
        forum_topic_columns = [column[1] for column in cursor.fetchall()]
        
        if 'image_url' not in forum_topic_columns:
            cursor.execute("ALTER TABLE forum_topic ADD COLUMN image_url VARCHAR(500)")
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ image_url –≤ —Ç–∞–±–ª–∏—Ü—É forum_topic")
        else:
            print("‚ÑπÔ∏è –ü–æ–ª–µ image_url —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ forum_topic")
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ parent_id –≤ forum_post
        cursor.execute("PRAGMA table_info(forum_post)")
        forum_post_columns = [column[1] for column in cursor.fetchall()]
        
        if 'parent_id' not in forum_post_columns:
            cursor.execute("ALTER TABLE forum_post ADD COLUMN parent_id INTEGER")
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ parent_id –≤ —Ç–∞–±–ª–∏—Ü—É forum_post")
        else:
            print("‚ÑπÔ∏è –ü–æ–ª–µ parent_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ forum_post")
        
        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ updated_at –≤ forum_post
        if 'updated_at' not in forum_post_columns:
            cursor.execute("ALTER TABLE forum_post ADD COLUMN updated_at DATETIME")
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º updated_at —Ä–∞–≤–Ω—ã–º created_at –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π
            cursor.execute("UPDATE forum_post SET updated_at = created_at WHERE updated_at IS NULL")
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ updated_at –≤ —Ç–∞–±–ª–∏—Ü—É forum_post")
        else:
            print("‚ÑπÔ∏è –ü–æ–ª–µ updated_at —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ forum_post")
        
        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ updated_at –≤ post (–±–ª–æ–≥)
        cursor.execute("PRAGMA table_info(post)")
        post_columns = [column[1] for column in cursor.fetchall()]
        
        if 'updated_at' not in post_columns:
            cursor.execute("ALTER TABLE post ADD COLUMN updated_at DATETIME")
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º updated_at —Ä–∞–≤–Ω—ã–º created_at –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π
            cursor.execute("UPDATE post SET updated_at = created_at WHERE updated_at IS NULL")
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ updated_at –≤ —Ç–∞–±–ª–∏—Ü—É post")
        else:
            print("‚ÑπÔ∏è –ü–æ–ª–µ updated_at —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ post")
        
        # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ is_active –≤ user
        cursor.execute("PRAGMA table_info(user)")
        user_columns = [column[1] for column in cursor.fetchall()]
        
        if 'is_active' not in user_columns:
            cursor.execute("ALTER TABLE user ADD COLUMN is_active BOOLEAN DEFAULT 1")
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ is_active –≤ —Ç–∞–±–ª–∏—Ü—É user")
        else:
            print("‚ÑπÔ∏è –ü–æ–ª–µ is_active —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ user")
        
        # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ created_at –≤ user
        if 'created_at' not in user_columns:
            cursor.execute("ALTER TABLE user ADD COLUMN created_at DATETIME")
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            current_time = datetime.utcnow().isoformat()
            cursor.execute("UPDATE user SET created_at = ? WHERE created_at IS NULL", (current_time,))
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ created_at –≤ —Ç–∞–±–ª–∏—Ü—É user")
        else:
            print("‚ÑπÔ∏è –ü–æ–ª–µ created_at —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ user")
        
        # 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ created_at –≤ property
        cursor.execute("PRAGMA table_info(property)")
        property_columns = [column[1] for column in cursor.fetchall()]
        
        if 'created_at' not in property_columns:
            cursor.execute("ALTER TABLE property ADD COLUMN created_at DATETIME")
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π
            current_time = datetime.utcnow().isoformat()
            cursor.execute("UPDATE property SET created_at = ? WHERE created_at IS NULL", (current_time,))
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ created_at –≤ —Ç–∞–±–ª–∏—Ü—É property")
        else:
            print("‚ÑπÔ∏è –ü–æ–ª–µ created_at —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ property")
        
        # 8. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ created_at –≤ voting
        cursor.execute("PRAGMA table_info(voting)")
        voting_columns = [column[1] for column in cursor.fetchall()]
        
        if 'created_at' not in voting_columns:
            cursor.execute("ALTER TABLE voting ADD COLUMN created_at DATETIME")
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π
            current_time = datetime.utcnow().isoformat()
            cursor.execute("UPDATE voting SET created_at = ? WHERE created_at IS NULL", (current_time,))
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ created_at –≤ —Ç–∞–±–ª–∏—Ü—É voting")
        else:
            print("‚ÑπÔ∏è –ü–æ–ª–µ created_at —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ voting")
        
        # 9. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ created_at –≤ forum_topic
        if 'created_at' not in forum_topic_columns:
            cursor.execute("ALTER TABLE forum_topic ADD COLUMN created_at DATETIME")
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π
            current_time = datetime.utcnow().isoformat()
            cursor.execute("UPDATE forum_topic SET created_at = ? WHERE created_at IS NULL", (current_time,))
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ created_at –≤ —Ç–∞–±–ª–∏—Ü—É forum_topic")
        else:
            print("‚ÑπÔ∏è –ü–æ–ª–µ created_at —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ forum_topic")
        
        # 10. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ created_at –≤ forum_post
        if 'created_at' not in forum_post_columns:
            cursor.execute("ALTER TABLE forum_post ADD COLUMN created_at DATETIME")
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π
            current_time = datetime.utcnow().isoformat()
            cursor.execute("UPDATE forum_post SET created_at = ? WHERE created_at IS NULL", (current_time,))
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ created_at –≤ —Ç–∞–±–ª–∏—Ü—É forum_post")
        else:
            print("‚ÑπÔ∏è –ü–æ–ª–µ created_at —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ forum_post")
        
        # 11. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='notification'")
        if not cursor.fetchone():
            cursor.execute('''
                CREATE TABLE notification (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    user_id INTEGER NOT NULL,
                    title VARCHAR(200) NOT NULL,
                    message TEXT NOT NULL,
                    type VARCHAR(50) NOT NULL,
                    related_id INTEGER,
                    is_read BOOLEAN DEFAULT 0,
                    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                    FOREIGN KEY (user_id) REFERENCES user (id)
                )
            ''')
            
            # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
            cursor.execute('CREATE INDEX idx_notification_user_id ON notification (user_id)')
            cursor.execute('CREATE INDEX idx_notification_is_read ON notification (is_read)')
            cursor.execute('CREATE INDEX idx_notification_created_at ON notification (created_at)')
            
            print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ notification")
            print("‚úÖ –°–æ–∑–¥–∞–Ω—ã –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
        else:
            print("‚ÑπÔ∏è –¢–∞–±–ª–∏—Ü–∞ notification —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        conn.commit()
        conn.close()
        
        print("üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

def show_database_info():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    db_path = 'instance/app.db'
    
    if not os.path.exists(db_path):
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö {db_path} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        print("\nüìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
        print("=" * 50)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table'")
        tables = cursor.fetchall()
        
        for table in tables:
            table_name = table[0]
            print(f"\nüìã –¢–∞–±–ª–∏—Ü–∞: {table_name}")
            print("-" * 30)
            
            cursor.execute(f"PRAGMA table_info({table_name})")
            columns = cursor.fetchall()
            
            for column in columns:
                col_id, col_name, col_type, not_null, default_val, pk = column
                pk_mark = " üîë" if pk else ""
                not_null_mark = " NOT NULL" if not_null else ""
                default_mark = f" DEFAULT {default_val}" if default_val else ""
                print(f"  ‚Ä¢ {col_name} ({col_type}){not_null_mark}{default_mark}{pk_mark}")
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")

if __name__ == "__main__":
    print("üöÄ –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 40)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    success = update_database()
    
    if success:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
        show_database_info()
    else:
        print("‚ùå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ —É–¥–∞–ª–æ—Å—å!") 