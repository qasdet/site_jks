from app import create_app
from model.db_models import db
from sqlalchemy import text

def check_and_fix_columns():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–ª–æ–Ω–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ user"""
    app = create_app()
    
    with app.app_context():
        try:
            with db.engine.connect() as conn:
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∞–±–ª–∏—Ü–µ user
                result = conn.execute(text("PRAGMA table_info(user)"))
                columns = {row[1]: row[2] for row in result.fetchall()}
                
                print("üìã –¢–µ–∫—É—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ user:")
                for col_name, col_type in columns.items():
                    print(f"  - {col_name}: {col_type}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–ª–æ–Ω–∫–∏
                required_columns = {
                    'last_login': 'DATETIME',
                    'failed_login_attempts': 'INTEGER DEFAULT 0',
                    'locked_until': 'DATETIME',
                    'password_changed_at': 'DATETIME DEFAULT CURRENT_TIMESTAMP',
                    'require_password_change': 'BOOLEAN DEFAULT FALSE'
                }
                
                print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–ª–æ–Ω–æ–∫:")
                for col_name, col_type in required_columns.items():
                    if col_name in columns:
                        print(f"  ‚úÖ {col_name}: —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                    else:
                        print(f"  ‚ùå {col_name}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
                        try:
                            conn.execute(text(f"ALTER TABLE user ADD COLUMN {col_name} {col_type}"))
                            print(f"  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ–ª–æ–Ω–∫–∞ {col_name}")
                        except Exception as e:
                            print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ {col_name}: {e}")
                
                conn.commit()
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                result = conn.execute(text("PRAGMA table_info(user)"))
                final_columns = {row[1]: row[2] for row in result.fetchall()}
                
                print("\nüìã –§–∏–Ω–∞–ª—å–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ user:")
                for col_name, col_type in final_columns.items():
                    print(f"  - {col_name}: {col_type}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–ª–æ–Ω–æ–∫: {e}")
        
        print("\nüéâ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    check_and_fix_columns() 