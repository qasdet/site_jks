import sqlite3
import os
from datetime import datetime

def reset_database():
    """–ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ—Å–æ–∑–¥–∞–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    db_path = 'instance/app.db'
    
    # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    if os.path.exists(db_path):
        try:
            os.remove(db_path)
            print("üóëÔ∏è –°—É—â–µ—Å—Ç–≤—É—é—â–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–¥–∞–ª–µ–Ω–∞")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
            return False
    
    try:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        print("üîÑ –°–æ–∑–¥–∞—é –Ω–æ–≤—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        cursor.execute('''
            CREATE TABLE user (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                username VARCHAR(80) UNIQUE NOT NULL,
                email VARCHAR(120) UNIQUE NOT NULL,
                password_hash VARCHAR(128),
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                is_active BOOLEAN DEFAULT 1
            )
        ''')
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ user")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–æ—Å—Ç–æ–≤ –±–ª–æ–≥–∞
        cursor.execute('''
            CREATE TABLE post (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                title VARCHAR(200) NOT NULL,
                content TEXT NOT NULL,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                user_id INTEGER NOT NULL,
                FOREIGN KEY (user_id) REFERENCES user (id)
            )
        ''')
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ post")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏
        cursor.execute('''
            CREATE TABLE property (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                number VARCHAR(20) UNIQUE NOT NULL,
                area FLOAT NOT NULL,
                owner_id INTEGER NOT NULL,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (owner_id) REFERENCES user (id)
            )
        ''')
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ property")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–π
        cursor.execute('''
            CREATE TABLE voting (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                title VARCHAR(200) NOT NULL,
                description TEXT NOT NULL,
                question VARCHAR(500) NOT NULL,
                start_date DATETIME NOT NULL,
                end_date DATETIME NOT NULL,
                is_active BOOLEAN DEFAULT 1,
                created_by INTEGER NOT NULL,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (created_by) REFERENCES user (id)
            )
        ''')
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ voting")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
        cursor.execute('''
            CREATE TABLE voting_option (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                text VARCHAR(200) NOT NULL,
                voting_id INTEGER NOT NULL,
                FOREIGN KEY (voting_id) REFERENCES voting (id)
            )
        ''')
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ voting_option")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –≥–æ–ª–æ—Å–æ–≤
        cursor.execute('''
            CREATE TABLE vote (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                voting_id INTEGER NOT NULL,
                property_id INTEGER NOT NULL,
                option_id INTEGER NOT NULL,
                voted_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (voting_id) REFERENCES voting (id),
                FOREIGN KEY (property_id) REFERENCES property (id),
                FOREIGN KEY (option_id) REFERENCES voting_option (id)
            )
        ''')
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ vote")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Ç–µ–º —Ñ–æ—Ä—É–º–∞
        cursor.execute('''
            CREATE TABLE forum_topic (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                title VARCHAR(200) NOT NULL,
                image_url VARCHAR(500),
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                user_id INTEGER NOT NULL,
                FOREIGN KEY (user_id) REFERENCES user (id)
            )
        ''')
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ forum_topic")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å–æ–æ–±—â–µ–Ω–∏–π —Ñ–æ—Ä—É–º–∞
        cursor.execute('''
            CREATE TABLE forum_post (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                content TEXT NOT NULL,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                user_id INTEGER NOT NULL,
                topic_id INTEGER NOT NULL,
                parent_id INTEGER,
                FOREIGN KEY (user_id) REFERENCES user (id),
                FOREIGN KEY (topic_id) REFERENCES forum_topic (id),
                FOREIGN KEY (parent_id) REFERENCES forum_post (id)
            )
        ''')
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ forum_post")
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        cursor.execute('CREATE INDEX idx_post_user_id ON post (user_id)')
        cursor.execute('CREATE INDEX idx_property_owner_id ON property (owner_id)')
        cursor.execute('CREATE INDEX idx_voting_created_by ON voting (created_by)')
        cursor.execute('CREATE INDEX idx_vote_voting_id ON vote (voting_id)')
        cursor.execute('CREATE INDEX idx_vote_property_id ON vote (property_id)')
        cursor.execute('CREATE INDEX idx_vote_option_id ON vote (option_id)')
        cursor.execute('CREATE INDEX idx_voting_option_voting_id ON voting_option (voting_id)')
        cursor.execute('CREATE INDEX idx_forum_topic_user_id ON forum_topic (user_id)')
        cursor.execute('CREATE INDEX idx_forum_post_user_id ON forum_post (user_id)')
        cursor.execute('CREATE INDEX idx_forum_post_topic_id ON forum_post (topic_id)')
        cursor.execute('CREATE INDEX idx_forum_post_parent_id ON forum_post (parent_id)')
        print("‚úÖ –°–æ–∑–¥–∞–Ω—ã –∏–Ω–¥–µ–∫—Å—ã")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        conn.commit()
        conn.close()
        
        print("üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

def create_sample_data():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"""
    db_path = 'instance/app.db'
    
    if not os.path.exists(db_path):
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö {db_path} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return False
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        print("üîÑ –°–æ–∑–¥–∞—é —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cursor.execute('''
            INSERT INTO user (username, email, password_hash, created_at, is_active)
            VALUES (?, ?, ?, ?, ?)
        ''', ('admin', 'admin@example.com', 'pbkdf2:sha256:600000$test$hash', datetime.utcnow().isoformat(), 1))
        
        user_id = cursor.lastrowid
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (ID: {user_id})")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å
        cursor.execute('''
            INSERT INTO property (number, area, owner_id, created_at)
            VALUES (?, ?, ?, ?)
        ''', ('101', 45.5, user_id, datetime.utcnow().isoformat()))
        
        property_id = cursor.lastrowid
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å (ID: {property_id})")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –±–ª–æ–≥–∞
        cursor.execute('''
            INSERT INTO post (title, content, user_id, created_at, updated_at)
            VALUES (?, ?, ?, ?, ?)
        ''', ('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!', '–≠—Ç–æ –ø–µ—Ä–≤—ã–π –ø–æ—Å—Ç –≤ –±–ª–æ–≥–µ –∂–∏–ª—å—Ü–æ–≤.', user_id, datetime.utcnow().isoformat(), datetime.utcnow().isoformat()))
        
        print("‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –±–ª–æ–≥–∞")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Ç–µ–º—É —Ñ–æ—Ä—É–º–∞
        cursor.execute('''
            INSERT INTO forum_topic (title, user_id, created_at)
            VALUES (?, ?, ?)
        ''', ('–û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã', user_id, datetime.utcnow().isoformat()))
        
        topic_id = cursor.lastrowid
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞—è —Ç–µ–º–∞ —Ñ–æ—Ä—É–º–∞ (ID: {topic_id})")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ–º–µ
        cursor.execute('''
            INSERT INTO forum_post (content, user_id, topic_id, created_at, updated_at)
            VALUES (?, ?, ?, ?, ?)
        ''', ('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Ñ–æ—Ä—É–º –∂–∏–ª—å—Ü–æ–≤!', user_id, topic_id, datetime.utcnow().isoformat(), datetime.utcnow().isoformat()))
        
        print("‚úÖ –°–æ–∑–¥–∞–Ω–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ñ–æ—Ä—É–º–∞")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        conn.commit()
        conn.close()
        
        print("üéâ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –°–∫—Ä–∏–ø—Ç —Å–±—Ä–æ—Å–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 40)
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    success = reset_database()
    
    if success:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        create_sample_data()
        print("\n‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    else:
        print("‚ùå –°–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ —É–¥–∞–ª—Å—è!") 