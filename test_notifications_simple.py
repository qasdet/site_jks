#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
"""

import requests
import json
import time

def test_messages_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º API –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π"""
    
    # –ë–∞–∑–æ–≤—ã–π URL (–∏–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à)
    base_url = "http://localhost:5000"
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç API /messages/api/unread-count")
    try:
        response = requests.get(f"{base_url}/messages/api/unread-count")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"–û—Ç–≤–µ—Ç: {json.dumps(data, indent=2, ensure_ascii=False)}")
        else:
            print(f"–û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç API /messages/api/latest-messages")
    try:
        response = requests.get(f"{base_url}/messages/api/latest-messages")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"–û—Ç–≤–µ—Ç: {json.dumps(data, indent=2, ensure_ascii=False)}")
        else:
            print(f"–û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç API /messages/api/status")
    try:
        response = requests.get(f"{base_url}/messages/api/status")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"–û—Ç–≤–µ—Ç: {json.dumps(data, indent=2, ensure_ascii=False)}")
        else:
            print(f"–û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

def test_forum_notifications():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º API –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Ñ–æ—Ä—É–º–∞"""
    
    base_url = "http://localhost:5000"
    
    print("\n\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Ñ–æ—Ä—É–º–∞")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Ñ–æ—Ä—É–º–∞
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç API /forum/notifications/count")
    try:
        response = requests.get(f"{base_url}/forum/notifications/count")
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"–û—Ç–≤–µ—Ç: {json.dumps(data, indent=2, ensure_ascii=False)}")
        else:
            print(f"–û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

if __name__ == "__main__":
    print("üîç –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Flask —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:5000")
    print("–ò –≤—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ")
    
    # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    time.sleep(2)
    
    test_messages_api()
    test_forum_notifications()
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüí° –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:5000")
    print("2. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É")
    print("3. –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ (F12)")
    print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫")
    print("5. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–∑–≤–∞—Ç—å window.testMessageNotification() –≤ –∫–æ–Ω—Å–æ–ª–∏") 